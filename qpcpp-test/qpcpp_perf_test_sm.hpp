//$file${.::qpcpp_perf_test_sm.hpp} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: kaori_hsm_perf_test.qm
// File:  ${.::qpcpp_perf_test_sm.hpp}
//
// This code has been generated by QM 5.3.0 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open source software: you can redistribute it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//
// NOTE:
// Alternatively, this generated code may be distributed under the terms
// of Quantum Leaps commercial licenses, which expressly supersede the GNU
// General Public License and are specifically designed for licensees
// interested in retaining the proprietary status of their code.
//
// Contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${.::qpcpp_perf_test_sm.hpp} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#pragma once
#include "qpcpp.hpp"
enum AppSignals : QP::QSignal {
    DUMMY_SIG = QP::Q_USER_SIG,
    A_SIG,
    B_SIG,
    C_SIG,
    D_SIG
};


//$declare${HSM::QPCPPPerfTestSM} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${HSM::QPCPPPerfTestSM} ....................................................
class QPCPPPerfTestSM : public QP::QHsm {
public:
    QPCPPPerfTestSM();

protected:
    Q_STATE_DECL(initial);
    Q_STATE_DECL(S1);
    Q_STATE_DECL(S12);
    Q_STATE_DECL(S121);
    Q_STATE_DECL(S1211);
    Q_STATE_DECL(S1212);
    Q_STATE_DECL(S11);
    Q_STATE_DECL(S111);
}; // class QPCPPPerfTestSM
//$enddecl${HSM::QPCPPPerfTestSM} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
